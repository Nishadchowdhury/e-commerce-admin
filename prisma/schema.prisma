// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

//forst we need to setup and connect the DB
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// it's time to create a model
model Store {
  id        String      @id @default(uuid())
  name      String
  userId    String
  Billboard Billboard[] @relation("StoreToBillboard")
  Category  Category[]  @relation("StoreToCategory")
  createAt  DateTime    @default(now())
  updateAt  DateTime    @updatedAt
  Size      Size[]      @relation("StoreToSize")
}

// modle for billboard
model Billboard {
  id        String     @id @default(uuid())
  // relatio the bb with stores. So billboard can only be exist in a specific store.
  storeId   String // we defined the store id here.
  store     Store      @relation("StoreToBillboard", fields: [storeId], references: [id])
  // we defined the relation here. this relation connects to the ralation to the store with the name. It's targetting the fields the storeId.
  catagory  Category[]
  label     String
  imageUrl  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  store       Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])

  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id      String @id @default(uuid())
  storeId String
  store   Store  @relation("StoreToSize", fields: [storeId], references: [id])

  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}
